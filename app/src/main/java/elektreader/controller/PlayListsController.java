package elektreader.controller;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Optional;
import elektreader.api.PlayList;
import javafx.scene.control.Button;
import javafx.scene.control.ScrollPane;
import javafx.scene.layout.TilePane;
import javafx.scene.layout.VBox;

/* this class represent the controller to the Playlist view, which is controlled
 * by the GUI controller class
 */
public class PlayListsController {
    /* button generated by the constructor */
    private List<Button> btnPlaylists;
    private SongsController songsController;

    /**
     * Gets the playlist list from the static method getReader of GUI Controller
     * @param playlistsList the playlists panel in which the class grafts the buttons
     * @param songsPane the songs panel to build the the new song controller
     */
    public PlayListsController(final ScrollPane playlistsPane, final ScrollPane songsPane) {

        this.btnPlaylists = new ArrayList<>(Collections.emptyList());
        TilePane songContainer = new TilePane();
        this.songsController = new SongsController(songContainer);
        VBox plistContainer = new VBox();

        songContainer.setPrefHeight(songsPane.getHeight());
        songContainer.setPrefWidth(songsPane.getWidth());

        plistContainer.setPrefHeight(playlistsPane.getHeight());
        plistContainer.setPrefWidth(playlistsPane.getWidth());
        plistContainer.setSpacing(2);
    
        GUIController.getReader().getPlaylists().stream()
            .map(playlist -> createButton(playlist,songContainer))
            .peek(b -> System.out.println(b.getText()))
            .forEach(button -> {
                plistContainer.getChildren().add(button);
                btnPlaylists.add(button);
            });

        this.btnPlaylists.stream()
            .forEach(btn -> btn.setPrefWidth(playlistsPane.getWidth()));

        playlistsPane.setContent(plistContainer);
        songsPane.setContent(songContainer);
    }

    private Button createButton(final PlayList p, final TilePane songsList) {
        Button btnPlaylist = new Button("#"+p.getName());
        btnPlaylist.getStyleClass().add("playlistbtn");
        btnPlaylist.setOnMouseClicked(event -> {
            this.btnPlaylists.stream()
                .forEach(btn -> {
                    btn.getStyleClass().removeIf(style -> style.equals("selectedbtn"));
                });
            var btn = (Button)event.getSource();
            btn.getStyleClass().add("selectedbutton");
			if(GUIController.getReader().setCurrentPlaylist(Optional.of(p))); {
                songsController.load(p);
            }
		});
        return btnPlaylist;
    }

    public List<Button> getBtnPlaylists() {
        return this.btnPlaylists;
    }
}
